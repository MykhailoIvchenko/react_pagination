{"version":3,"sources":["components/PageContent/PageContent.tsx","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["PageContent","useState","queryParams","setQueryParams","currentPage","useParams","useMemo","className","Pagination","first","precurrent","current","postcurrent","last","isFirstVisible","isPrecurrentVisible","isPostcurrentVisible","isPrecurrentFreeSpaceVisible","isPostcurrentFreeSpaceVisible","isLastVisible","selectPage","moveBack","moveForth","to","onClick","style","pointerEvents","hidden","App","state","total","page","setParemetersForValueOne","setState","setParametersForValueTwo","setParametersForValueThree","setParametersForLastValue","setParametersForSecondValueFromEnd","setParametersForThirdValueFromEnd","setParametersForRegularValue","onPageChange","selectedPage","handleBackButtonClick","prevPage","handleForthButtonClick","this","index","element","path","React","Component","ReactDOM","render","document","getElementById"],"mappings":"0SA2BeA,EAvBe,WAC5B,MAGIC,mBAAS,KAHb,mBACEC,EADF,KAEEC,EAFF,KAKQC,EAAgBC,cAAhBD,YAQR,OANAE,mBAAQ,WACFF,GACFD,EAAeC,KAEhB,CAACA,IAGF,mCACE,mBAAGG,UAAU,kBAAb,SACoB,MAAhBL,EAAuB,UAAYA,OC+H9BM,G,MA/HqB,SAAC,GAe9B,IAdLC,EAcI,EAdJA,MACAC,EAaI,EAbJA,WACAC,EAYI,EAZJA,QACAC,EAWI,EAXJA,YACAC,EAUI,EAVJA,KACAC,EASI,EATJA,eACAC,EAQI,EARJA,oBACAC,EAOI,EAPJA,qBACAC,EAMI,EANJA,6BACAC,EAKI,EALJA,8BACAC,EAII,EAJJA,cACAC,EAGI,EAHJA,WACAC,EAEI,EAFJA,SACAC,EACI,EADJA,UAEA,OACE,sBAAKf,UAAU,iBAAf,UACE,cAAC,IAAD,CACEA,UAAU,iCACVgB,GAAE,gBAAWZ,EAAU,GACvBa,QAASH,EACTI,MAAO,CACLC,cAAgBf,IAAYF,EAAS,OAAS,QALlD,eAUA,qBACEF,UAAU,aADZ,UAGE,oBACEA,UAAU,WACVoB,QAASb,EAFX,SAIE,cAAC,IAAD,CACEP,UAAU,WACVgB,GAAE,gBAAWd,GACbe,QAAS,WACPJ,EAAWX,IAJf,SAOGA,MAGL,oBACEF,UAAU,YACVoB,QAASV,EAFX,iBAMA,oBACEV,UAAU,WACVoB,QAASZ,EAFX,SAIE,cAAC,IAAD,CACER,UAAU,WACVgB,GAAE,gBAAWb,GACbc,QAAS,WACPJ,EAAWV,IAJf,SAOGA,MAGL,oBACEH,UAAU,WADZ,SAGE,cAAC,IAAD,CACEA,UAAU,WACVgB,GAAE,gBAAWZ,GACba,QAAS,WACPJ,EAAWT,IAJf,oBAOOA,EAPP,SAUF,oBACEJ,UAAU,WACVoB,QAASX,EAFX,SAIE,cAAC,IAAD,CACET,UAAU,WACVgB,GAAE,gBAAWX,GACbY,QAAS,WACPJ,EAAWR,IAJf,SAOGA,MAGL,oBACEL,UAAU,YACVoB,QAAST,EAFX,iBAMA,oBACEX,UAAU,WACVoB,QAASR,EAFX,SAIE,cAAC,IAAD,CACEZ,UAAU,WACVgB,GAAE,gBAAWV,GACbW,QAAS,WACPJ,EAAWP,IAJf,SAOGA,SAIP,cAAC,IAAD,CACEN,UAAU,kCACVgB,GAAE,gBAAWZ,EAAU,GACvBa,QAASF,EACTG,MAAO,CACLC,cAAgBf,IAAYE,EAAQ,OAAS,QALjD,oBCpHAe,E,4MACJC,MAAQ,CACNC,MAAO,GACPC,KAAM,EACN3B,YAAa,EACbU,gBAAgB,EAChBC,qBAAqB,EACrBC,sBAAsB,EACtBC,8BAA8B,EAC9BC,+BAA+B,EAC/BC,eAAe,G,EAGjBa,yBAA2B,WACzB,EAAKC,SAAS,CACZnB,gBAAgB,EAChBK,eAAe,EACfJ,qBAAqB,EACrBE,8BAA8B,EAC9BD,sBAAsB,EACtBE,+BAA+B,K,EAInCgB,yBAA2B,WACzB,EAAKD,SAAS,CACZnB,gBAAgB,EAChBK,eAAe,EACfJ,qBAAqB,EACrBE,8BAA8B,EAC9BD,sBAAsB,EACtBE,+BAA+B,K,EAInCiB,2BAA6B,WAC3B,EAAKF,SAAS,CACZnB,gBAAgB,EAChBK,eAAe,EACfJ,qBAAqB,EACrBE,8BAA8B,EAC9BD,sBAAsB,EACtBE,+BAA+B,K,EAInCkB,0BAA4B,WAC1B,EAAKH,SAAS,CACZnB,gBAAgB,EAChBK,eAAe,EACfJ,qBAAqB,EACrBE,8BAA8B,EAC9BD,sBAAsB,EACtBE,+BAA+B,K,EAInCmB,mCAAqC,WACnC,EAAKJ,SAAS,CACZnB,gBAAgB,EAChBK,eAAe,EACfJ,qBAAqB,EACrBE,8BAA8B,EAC9BD,sBAAsB,EACtBE,+BAA+B,K,EAInCoB,kCAAoC,WAClC,EAAKL,SAAS,CACZnB,gBAAgB,EAChBK,eAAe,EACfJ,qBAAqB,EACrBE,8BAA8B,EAC9BD,sBAAsB,EACtBE,+BAA+B,K,EAInCqB,6BAA+B,WAC7B,EAAKN,SAAS,CACZnB,gBAAgB,EAChBK,eAAe,EACfJ,qBAAqB,EACrBE,8BAA8B,EAC9BD,sBAAsB,EACtBE,+BAA+B,K,EAInCsB,aACE,SAACC,GACD,EAAKR,SAAS,CACZ7B,YAAaqC,IAGXA,IAAiB,EAAKZ,MAAME,KAM5BU,IAAiB,EAAKZ,MAAME,KAAO,EAMnCU,IAAiB,EAAKZ,MAAME,KAAO,EAMnCU,IAAiB,EAAKZ,MAAMC,MAM5BW,IAAiB,EAAKZ,MAAMC,MAAQ,EAMpCW,IAAiB,EAAKZ,MAAMC,MAAQ,EAMxC,EAAKS,+BALH,EAAKD,oCANL,EAAKD,qCANL,EAAKD,4BANL,EAAKD,6BANL,EAAKD,2BANL,EAAKF,4B,EAsCTU,sBAAwB,WACtB,IAAMC,EAAW,EAAKd,MAAMzB,YAE5B,EAAK6B,UAAS,SAAAJ,GAAK,MAAK,CACtBzB,YAAayB,EAAMzB,YAAc,MAG/BuC,IAAa,EAAKd,MAAME,KAAO,EAM/BY,IAAa,EAAKd,MAAME,KAAO,EAM/BY,IAAa,EAAKd,MAAME,KAAO,EAM/BY,IAAa,EAAKd,MAAMC,MAMxBa,IAAa,EAAKd,MAAMC,MAAQ,EAMpC,EAAKS,+BALH,EAAKD,oCANL,EAAKD,qCANL,EAAKF,6BANL,EAAKD,2BANL,EAAKF,4B,EAgCTY,uBAAyB,WACvB,IAAMD,EAAW,EAAKd,MAAMzB,YAE5B,EAAK6B,UAAS,SAAAJ,GAAK,MAAK,CACtBzB,YAAayB,EAAMzB,YAAc,MAG/BuC,IAAa,EAAKd,MAAME,KAMxBY,IAAa,EAAKd,MAAME,KAAO,EAM/BY,IAAa,EAAKd,MAAMC,MAAQ,EAMhCa,IAAa,EAAKd,MAAMC,MAAQ,EAMhCa,IAAa,EAAKd,MAAMC,MAAQ,EAMpC,EAAKS,+BALH,EAAKH,4BANL,EAAKC,qCANL,EAAKC,oCANL,EAAKH,6BANL,EAAKD,4B,4CAgCT,WACE,OACE,qCACE,4CAIA,sBACE3B,UAAU,aADZ,UAGE,cAAC,EAAD,CACEE,MAAOoC,KAAKhB,MAAME,KAClBrB,WAAYmC,KAAKhB,MAAMzB,YAAc,EACrCO,QAASkC,KAAKhB,MAAMzB,YACpBQ,YAAaiC,KAAKhB,MAAMzB,YAAc,EACtCS,KAAMgC,KAAKhB,MAAMC,MACjBhB,eAAgB+B,KAAKhB,MAAMf,eAC3BG,6BACE4B,KAAKhB,MAAMZ,6BAEbF,oBAAqB8B,KAAKhB,MAAMd,oBAChCC,qBAAsB6B,KAAKhB,MAAMb,qBACjCE,8BACE2B,KAAKhB,MAAMX,8BAEbC,cAAe0B,KAAKhB,MAAMV,cAC1BC,WAAYyB,KAAKL,aACjBnB,SAAUwB,KAAKH,sBACfpB,UAAWuB,KAAKD,yBAGlB,eAAC,IAAD,WACE,cAAC,IAAD,CAAOE,OAAK,EAACC,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CACEC,KAAK,gBACLD,QACE,cAAC,EAAD,mB,GA3PEE,IAAMC,WAqQTtB,ICnRfuB,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0b6c8698.chunk.js","sourcesContent":["import React, { useMemo, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './PageContent.scss';\n\nconst PageContent: React.FC = () => {\n  const [\n    queryParams,\n    setQueryParams,\n  ] = useState('/');\n\n  const { currentPage } = useParams();\n\n  useMemo(() => {\n    if (currentPage) {\n      setQueryParams(currentPage);\n    }\n  }, [currentPage]);\n\n  return (\n    <>\n      <p className=\"PageInformation\">\n        {(queryParams === '/') ? '/page=1' : queryParams}\n      </p>\n    </>\n  );\n};\n\nexport default PageContent;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Pagination.scss';\n\ntype Props = {\n  first: number,\n  precurrent: number,\n  current: number,\n  postcurrent: number,\n  last: number,\n  isFirstVisible: boolean,\n  isPrecurrentVisible: boolean,\n  isPostcurrentVisible: boolean,\n  isPrecurrentFreeSpaceVisible: boolean,\n  isPostcurrentFreeSpaceVisible: boolean,\n  isLastVisible: boolean,\n  selectPage: (selectedPage: number) => void,\n  moveBack: () => void,\n  moveForth: () => void,\n};\n\nconst Pagination: React.FC<Props> = ({\n  first,\n  precurrent,\n  current,\n  postcurrent,\n  last,\n  isFirstVisible,\n  isPrecurrentVisible,\n  isPostcurrentVisible,\n  isPrecurrentFreeSpaceVisible,\n  isPostcurrentFreeSpaceVisible,\n  isLastVisible,\n  selectPage,\n  moveBack,\n  moveForth,\n}) => {\n  return (\n    <nav className=\"PagesContainer\">\n      <NavLink\n        className=\"PageLink VersionTwoButton Back\"\n        to={`/page=${current - 1}`}\n        onClick={moveBack}\n        style={{\n          pointerEvents: (current === first) ? 'none' : 'auto',\n        }}\n      >\n        &lt;\n      </NavLink>\n      <ul\n        className=\"PagesPanel\"\n      >\n        <li\n          className=\"ItemPage\"\n          hidden={!isFirstVisible}\n        >\n          <NavLink\n            className=\"PageLink\"\n            to={`/page=${first}`}\n            onClick={() => {\n              selectPage(first);\n            }}\n          >\n            {first}\n          </NavLink>\n        </li>\n        <li\n          className=\"FreeSpace\"\n          hidden={!isPrecurrentFreeSpaceVisible}\n        >\n          ...\n        </li>\n        <li\n          className=\"ItemPage\"\n          hidden={!isPrecurrentVisible}\n        >\n          <NavLink\n            className=\"PageLink\"\n            to={`/page=${precurrent}`}\n            onClick={() => {\n              selectPage(precurrent);\n            }}\n          >\n            {precurrent}\n          </NavLink>\n        </li>\n        <li\n          className=\"ItemPage\"\n        >\n          <NavLink\n            className=\"PageLink\"\n            to={`/page=${current}`}\n            onClick={() => {\n              selectPage(current);\n            }}\n          >\n            {`[${current}]`}\n          </NavLink>\n        </li>\n        <li\n          className=\"ItemPage\"\n          hidden={!isPostcurrentVisible}\n        >\n          <NavLink\n            className=\"PageLink\"\n            to={`/page=${postcurrent}`}\n            onClick={() => {\n              selectPage(postcurrent);\n            }}\n          >\n            {postcurrent}\n          </NavLink>\n        </li>\n        <li\n          className=\"FreeSpace\"\n          hidden={!isPostcurrentFreeSpaceVisible}\n        >\n          ...\n        </li>\n        <li\n          className=\"ItemPage\"\n          hidden={!isLastVisible}\n        >\n          <NavLink\n            className=\"PageLink\"\n            to={`/page=${last}`}\n            onClick={() => {\n              selectPage(last);\n            }}\n          >\n            {last}\n          </NavLink>\n        </li>\n      </ul>\n      <NavLink\n        className=\"PageLink VersionTwoButton Forth\"\n        to={`/page=${current + 1}`}\n        onClick={moveForth}\n        style={{\n          pointerEvents: (current === last) ? 'none' : 'auto',\n        }}\n      >\n        &gt;\n      </NavLink>\n    </nav>\n  );\n};\n\nexport default Pagination;\n","import React from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport './App.scss';\nimport PageContent from './components/PageContent/PageContent';\nimport Pagination from './components/Pagination/Pagination';\n\ninterface State {\n  total: number,\n  page: number,\n  currentPage: number,\n  isFirstVisible: boolean,\n  isPrecurrentVisible: boolean,\n  isPostcurrentVisible: boolean,\n  isPrecurrentFreeSpaceVisible: boolean,\n  isPostcurrentFreeSpaceVisible: boolean,\n  isLastVisible: boolean,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    total: 42,\n    page: 1,\n    currentPage: 1,\n    isFirstVisible: false,\n    isPrecurrentVisible: false,\n    isPostcurrentVisible: true,\n    isPrecurrentFreeSpaceVisible: false,\n    isPostcurrentFreeSpaceVisible: true,\n    isLastVisible: true,\n  };\n\n  setParemetersForValueOne = () => {\n    this.setState({\n      isFirstVisible: false,\n      isLastVisible: true,\n      isPrecurrentVisible: false,\n      isPrecurrentFreeSpaceVisible: false,\n      isPostcurrentVisible: true,\n      isPostcurrentFreeSpaceVisible: true,\n    });\n  };\n\n  setParametersForValueTwo = () => {\n    this.setState({\n      isFirstVisible: true,\n      isLastVisible: true,\n      isPrecurrentVisible: false,\n      isPrecurrentFreeSpaceVisible: false,\n      isPostcurrentVisible: true,\n      isPostcurrentFreeSpaceVisible: true,\n    });\n  };\n\n  setParametersForValueThree = () => {\n    this.setState({\n      isFirstVisible: true,\n      isLastVisible: true,\n      isPrecurrentVisible: true,\n      isPrecurrentFreeSpaceVisible: false,\n      isPostcurrentVisible: true,\n      isPostcurrentFreeSpaceVisible: true,\n    });\n  };\n\n  setParametersForLastValue = () => {\n    this.setState({\n      isFirstVisible: true,\n      isLastVisible: false,\n      isPrecurrentVisible: true,\n      isPrecurrentFreeSpaceVisible: true,\n      isPostcurrentVisible: false,\n      isPostcurrentFreeSpaceVisible: false,\n    });\n  };\n\n  setParametersForSecondValueFromEnd = () => {\n    this.setState({\n      isFirstVisible: true,\n      isLastVisible: false,\n      isPrecurrentVisible: true,\n      isPrecurrentFreeSpaceVisible: true,\n      isPostcurrentVisible: true,\n      isPostcurrentFreeSpaceVisible: false,\n    });\n  };\n\n  setParametersForThirdValueFromEnd = () => {\n    this.setState({\n      isFirstVisible: true,\n      isLastVisible: true,\n      isPrecurrentVisible: true,\n      isPrecurrentFreeSpaceVisible: true,\n      isPostcurrentVisible: true,\n      isPostcurrentFreeSpaceVisible: false,\n    });\n  };\n\n  setParametersForRegularValue = () => {\n    this.setState({\n      isFirstVisible: true,\n      isLastVisible: true,\n      isPrecurrentVisible: true,\n      isPrecurrentFreeSpaceVisible: true,\n      isPostcurrentVisible: true,\n      isPostcurrentFreeSpaceVisible: true,\n    });\n  };\n\n  onPageChange\n  = (selectedPage: number) => {\n    this.setState({\n      currentPage: selectedPage,\n    });\n\n    if (selectedPage === this.state.page) {\n      this.setParemetersForValueOne();\n\n      return;\n    }\n\n    if (selectedPage === this.state.page + 1) {\n      this.setParametersForValueTwo();\n\n      return;\n    }\n\n    if (selectedPage === this.state.page + 2) {\n      this.setParametersForValueThree();\n\n      return;\n    }\n\n    if (selectedPage === this.state.total) {\n      this.setParametersForLastValue();\n\n      return;\n    }\n\n    if (selectedPage === this.state.total - 1) {\n      this.setParametersForSecondValueFromEnd();\n\n      return;\n    }\n\n    if (selectedPage === this.state.total - 2) {\n      this.setParametersForThirdValueFromEnd();\n\n      return;\n    }\n\n    this.setParametersForRegularValue();\n  };\n\n  handleBackButtonClick = () => {\n    const prevPage = this.state.currentPage;\n\n    this.setState(state => ({\n      currentPage: state.currentPage - 1,\n    }));\n\n    if (prevPage === this.state.page + 1) {\n      this.setParemetersForValueOne();\n\n      return;\n    }\n\n    if (prevPage === this.state.page + 2) {\n      this.setParametersForValueTwo();\n\n      return;\n    }\n\n    if (prevPage === this.state.page + 3) {\n      this.setParametersForValueThree();\n\n      return;\n    }\n\n    if (prevPage === this.state.total) {\n      this.setParametersForSecondValueFromEnd();\n\n      return;\n    }\n\n    if (prevPage === this.state.total - 1) {\n      this.setParametersForThirdValueFromEnd();\n\n      return;\n    }\n\n    this.setParametersForRegularValue();\n  };\n\n  handleForthButtonClick = () => {\n    const prevPage = this.state.currentPage;\n\n    this.setState(state => ({\n      currentPage: state.currentPage + 1,\n    }));\n\n    if (prevPage === this.state.page) {\n      this.setParametersForValueTwo();\n\n      return;\n    }\n\n    if (prevPage === this.state.page + 1) {\n      this.setParametersForValueThree();\n\n      return;\n    }\n\n    if (prevPage === this.state.total - 3) {\n      this.setParametersForThirdValueFromEnd();\n\n      return;\n    }\n\n    if (prevPage === this.state.total - 2) {\n      this.setParametersForSecondValueFromEnd();\n\n      return;\n    }\n\n    if (prevPage === this.state.total - 1) {\n      this.setParametersForLastValue();\n\n      return;\n    }\n\n    this.setParametersForRegularValue();\n  };\n\n  render() {\n    return (\n      <>\n        <h1>\n          Pagination\n        </h1>\n\n        <div\n          className=\"VersionTwo\"\n        >\n          <Pagination\n            first={this.state.page}\n            precurrent={this.state.currentPage - 1}\n            current={this.state.currentPage}\n            postcurrent={this.state.currentPage + 1}\n            last={this.state.total}\n            isFirstVisible={this.state.isFirstVisible}\n            isPrecurrentFreeSpaceVisible={\n              this.state.isPrecurrentFreeSpaceVisible\n            }\n            isPrecurrentVisible={this.state.isPrecurrentVisible}\n            isPostcurrentVisible={this.state.isPostcurrentVisible}\n            isPostcurrentFreeSpaceVisible={\n              this.state.isPostcurrentFreeSpaceVisible\n            }\n            isLastVisible={this.state.isLastVisible}\n            selectPage={this.onPageChange}\n            moveBack={this.handleBackButtonClick}\n            moveForth={this.handleForthButtonClick}\n          />\n\n          <Routes>\n            <Route index element={<PageContent />} />\n            <Route\n              path=\"/:currentPage\"\n              element={\n                <PageContent />\n              }\n            />\n          </Routes>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}