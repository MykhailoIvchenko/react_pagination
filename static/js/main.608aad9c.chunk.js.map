{"version":3,"sources":["components/PageContent/PageContent.tsx","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["PageContent","useState","queryParams","setQueryParams","currentPage","useParams","useMemo","className","Pagination","state","precurrent","props","current","postcurrent","isFirstVisible","isPrecurrentVisible","isPostcurrentVisible","isPrecurrentFreeSpaceVisible","isPostcurrentFreeSpaceVisible","isLastVisible","setParametersForRegularValue","setState","setParemetersForValueOne","setParametersForValueTwo","setParametersForValueThree","setParametersForLastValue","setParametersForSecondValueFromEnd","setParametersForThirdValueFromEnd","prevProps","this","first","last","to","onClick","moveBack","style","pointerEvents","hidden","selectPage","moveForth","React","Component","App","total","page","onPageChange","selectedPage","handleBackButtonClick","handleForthButtonClick","index","element","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.608aad9c.chunk.js","sourcesContent":["import React, { useMemo, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './PageContent.scss';\n\nconst PageContent: React.FC = () => {\n  const [\n    queryParams,\n    setQueryParams,\n  ] = useState('/');\n\n  const { currentPage } = useParams();\n\n  useMemo(() => {\n    if (currentPage) {\n      setQueryParams(currentPage);\n    }\n  }, [currentPage]);\n\n  return (\n    <>\n      <p className=\"PageInformation\">\n        {(queryParams === '/') ? '/page=1' : queryParams}\n      </p>\n    </>\n  );\n};\n\nexport default PageContent;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Pagination.scss';\n\ninterface PaginationState {\n  precurrent: number,\n  postcurrent: number,\n  isFirstVisible: boolean,\n  isPrecurrentVisible: boolean,\n  isPostcurrentVisible: boolean,\n  isPrecurrentFreeSpaceVisible: boolean,\n  isPostcurrentFreeSpaceVisible: boolean,\n  isLastVisible: boolean,\n}\n\ntype Props = {\n  first: number,\n  last: number,\n  current: number,\n  selectPage: (selectedPage: number) => void,\n  moveBack: () => void,\n  moveForth: () => void,\n};\n\nclass Pagination extends React.Component <Props, PaginationState> {\n  state = {\n    precurrent: this.props.current - 1,\n    postcurrent: this.props.current + 1,\n    isFirstVisible: false,\n    isPrecurrentVisible: false,\n    isPostcurrentVisible: true,\n    isPrecurrentFreeSpaceVisible: false,\n    isPostcurrentFreeSpaceVisible: true,\n    isLastVisible: true,\n  };\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.current !== this.props.current) {\n      switch (this.props.current) {\n        case this.props.first:\n          this.setParemetersForValueOne();\n          break;\n        case this.props.first + 1:\n          this.setParametersForValueTwo();\n          break;\n        case this.props.first + 2:\n          this.setParametersForValueThree();\n          break;\n        case this.props.last:\n          this.setParametersForLastValue();\n          break;\n        case this.props.last - 1:\n          this.setParametersForSecondValueFromEnd();\n          break;\n        case this.props.last - 2:\n          this.setParametersForThirdValueFromEnd();\n          break;\n        default:\n          this.setParametersForRegularValue();\n      }\n    }\n  }\n\n  setParametersForRegularValue = () => {\n    this.setState({\n      precurrent: this.props.current - 1,\n      postcurrent: this.props.current + 1,\n      isFirstVisible: true,\n      isLastVisible: true,\n      isPrecurrentVisible: true,\n      isPrecurrentFreeSpaceVisible: true,\n      isPostcurrentVisible: true,\n      isPostcurrentFreeSpaceVisible: true,\n    });\n  };\n\n  setParemetersForValueOne = () => {\n    this.setState({\n      precurrent: this.props.current - 1,\n      postcurrent: this.props.current + 1,\n      isFirstVisible: false,\n      isLastVisible: true,\n      isPrecurrentVisible: false,\n      isPrecurrentFreeSpaceVisible: false,\n      isPostcurrentVisible: true,\n      isPostcurrentFreeSpaceVisible: true,\n    });\n  };\n\n  setParametersForValueTwo = () => {\n    this.setState({\n      precurrent: this.props.current - 1,\n      postcurrent: this.props.current + 1,\n      isFirstVisible: true,\n      isLastVisible: true,\n      isPrecurrentVisible: false,\n      isPrecurrentFreeSpaceVisible: false,\n      isPostcurrentVisible: true,\n      isPostcurrentFreeSpaceVisible: true,\n    });\n  };\n\n  setParametersForValueThree = () => {\n    this.setState({\n      precurrent: this.props.current - 1,\n      postcurrent: this.props.current + 1,\n      isFirstVisible: true,\n      isLastVisible: true,\n      isPrecurrentVisible: true,\n      isPrecurrentFreeSpaceVisible: false,\n      isPostcurrentVisible: true,\n      isPostcurrentFreeSpaceVisible: true,\n    });\n  };\n\n  setParametersForLastValue = () => {\n    this.setState({\n      precurrent: this.props.current - 1,\n      postcurrent: this.props.current + 1,\n      isFirstVisible: true,\n      isLastVisible: false,\n      isPrecurrentVisible: true,\n      isPrecurrentFreeSpaceVisible: true,\n      isPostcurrentVisible: false,\n      isPostcurrentFreeSpaceVisible: false,\n    });\n  };\n\n  setParametersForSecondValueFromEnd = () => {\n    this.setState({\n      precurrent: this.props.current - 1,\n      postcurrent: this.props.current + 1,\n      isFirstVisible: true,\n      isLastVisible: false,\n      isPrecurrentVisible: true,\n      isPrecurrentFreeSpaceVisible: true,\n      isPostcurrentVisible: true,\n      isPostcurrentFreeSpaceVisible: false,\n    });\n  };\n\n  setParametersForThirdValueFromEnd = () => {\n    this.setState({\n      precurrent: this.props.current - 1,\n      postcurrent: this.props.current + 1,\n      isFirstVisible: true,\n      isLastVisible: true,\n      isPrecurrentVisible: true,\n      isPrecurrentFreeSpaceVisible: true,\n      isPostcurrentVisible: true,\n      isPostcurrentFreeSpaceVisible: false,\n    });\n  };\n\n  render() {\n    return (\n      <nav className=\"PagesContainer\">\n        <NavLink\n          className=\"PageLink VersionTwoButton Back\"\n          to={`/page=${this.props.current - 1}`}\n          onClick={this.props.moveBack}\n          style={{\n            pointerEvents: (this.props.current === this.props.first)\n              ? 'none' : 'auto',\n          }}\n        >\n          &lt;\n        </NavLink>\n        <ul\n          className=\"PagesPanel\"\n        >\n          <li\n            className=\"ItemPage\"\n            hidden={!this.state.isFirstVisible}\n          >\n            <NavLink\n              className=\"PageLink\"\n              to={`/page=${this.props.first}`}\n              onClick={() => {\n                this.props.selectPage(this.props.first);\n              }}\n            >\n              {this.props.first}\n            </NavLink>\n          </li>\n          <li\n            className=\"FreeSpace\"\n            hidden={!this.state.isPrecurrentFreeSpaceVisible}\n          >\n            ...\n          </li>\n          <li\n            className=\"ItemPage\"\n            hidden={!this.state.isPrecurrentVisible}\n          >\n            <NavLink\n              className=\"PageLink\"\n              to={`/page=${this.state.precurrent}`}\n              onClick={() => {\n                this.props.selectPage(this.state.precurrent);\n              }}\n            >\n              {this.state.precurrent}\n            </NavLink>\n          </li>\n          <li\n            className=\"ItemPage\"\n          >\n            <NavLink\n              className=\"PageLink\"\n              to={`/page=${this.props.current}`}\n              onClick={() => {\n                this.props.selectPage(this.props.current);\n              }}\n            >\n              {`[${this.props.current}]`}\n            </NavLink>\n          </li>\n          <li\n            className=\"ItemPage\"\n            hidden={!this.state.isPostcurrentVisible}\n          >\n            <NavLink\n              className=\"PageLink\"\n              to={`/page=${this.state.postcurrent}`}\n              onClick={() => {\n                this.props.selectPage(this.state.postcurrent);\n              }}\n            >\n              {this.state.postcurrent}\n            </NavLink>\n          </li>\n          <li\n            className=\"FreeSpace\"\n            hidden={!this.state.isPostcurrentFreeSpaceVisible}\n          >\n            ...\n          </li>\n          <li\n            className=\"ItemPage\"\n            hidden={!this.state.isLastVisible}\n          >\n            <NavLink\n              className=\"PageLink\"\n              to={`/page=${this.props.last}`}\n              onClick={() => {\n                this.props.selectPage(this.props.last);\n              }}\n            >\n              {this.props.last}\n            </NavLink>\n          </li>\n        </ul>\n        <NavLink\n          className=\"PageLink VersionTwoButton Forth\"\n          to={`/page=${this.props.current + 1}`}\n          onClick={this.props.moveForth}\n          style={{\n            pointerEvents: (this.props.current === this.props.last)\n              ? 'none' : 'auto',\n          }}\n        >\n          &gt;\n        </NavLink>\n      </nav>\n    );\n  }\n}\n\nexport default Pagination;\n","import React from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport './App.scss';\nimport PageContent from './components/PageContent/PageContent';\nimport Pagination from './components/Pagination/Pagination';\n\ninterface State {\n  total: number,\n  page: number,\n  currentPage: number,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    total: 42,\n    page: 1,\n    currentPage: 1,\n  };\n\n  onPageChange = (selectedPage: number) => {\n    this.setState({\n      currentPage: selectedPage,\n    });\n  };\n\n  handleBackButtonClick = () => {\n    const prevPage = this.state.currentPage;\n\n    if (prevPage > this.state.page) {\n      this.setState(state => ({\n        currentPage: state.currentPage - 1,\n      }));\n    }\n  };\n\n  handleForthButtonClick = () => {\n    const prevPage = this.state.currentPage;\n\n    if (prevPage < this.state.total) {\n      this.setState(state => ({\n        currentPage: state.currentPage + 1,\n      }));\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <h1>\n          Pagination\n        </h1>\n\n        <div\n          className=\"VersionTwo\"\n        >\n          <Pagination\n            first={this.state.page}\n            last={this.state.total}\n            current={this.state.currentPage}\n            selectPage={this.onPageChange}\n            moveBack={this.handleBackButtonClick}\n            moveForth={this.handleForthButtonClick}\n          />\n\n          <Routes>\n            <Route index element={<PageContent />} />\n            <Route\n              path=\"/:currentPage\"\n              element={\n                <PageContent />\n              }\n            />\n          </Routes>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}