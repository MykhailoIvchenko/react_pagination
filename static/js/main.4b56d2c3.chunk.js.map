{"version":3,"sources":["components/PageContent/PageContent.tsx","components/Pagination/Pagination.tsx","components/Pagination2/Pagination2.tsx","App.tsx","index.tsx"],"names":["PageContent","useState","queryParams","setQueryParams","useMemo","window","location","pathname","className","Pagination","total","perPage","page","currentPage","withInfo","selectPage","pagesArray","startPage","i","push","map","visiblePage","type","onClick","defaultProps","Pagination2","first","precurrent","current","postcurrent","last","isFirstVisible","isPrecurrentVisible","isPostcurrentVisible","isPrecurrentFreeSpaceVisible","isPostcurrentFreeSpaceVisible","isLastVisible","moveBack","moveForth","to","style","pointerEvents","hidden","App","state","isVersionOneUsed","changeVersion","setState","onPageChange","selectedPage","handlePrevButtonClick","prevState","handleNextButtonClick","setStartPage","selectedFrameSize","onPerPageChange","event","parseInt","target","value","setParemetersForValueOne","setParametersForValueTwo","setParametersForValueThree","setParametersForLastValue","setParametersForSecondValueFromEnd","setParametersForThirdValueFromEnd","setParametersForRegularValue","onPageChangeVersionTwo","handleBackButtonClick","prevPage","handleForthButtonClick","defaultValue","onChange","this","disabled","index","element","path","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4b56d2c3.chunk.js","sourcesContent":["import React, { useMemo, useState } from 'react';\nimport './PageContent.scss';\n\nconst PageContent: React.FC = () => {\n  const [\n    queryParams,\n    setQueryParams,\n  ] = useState('');\n\n  useMemo(() => {\n    setQueryParams(window.location.pathname);\n  }, [window.location.pathname]);\n\n  return (\n    <>\n      <p className=\"PageInformation\">\n        {(queryParams === '/') ? '/page=1' : queryParams}\n      </p>\n    </>\n  );\n};\n\nexport default PageContent;\n","import React from 'react';\nimport './Pagination.scss';\n\ntype Props = {\n  total: number,\n  perPage?: number,\n  page?: number,\n  currentPage: number,\n  withInfo: boolean,\n  selectPage: (selectedPage: number) => void,\n};\n\nconst Pagination: React.FC<Props> = ({\n  total,\n  perPage = 5,\n  page = 1,\n  currentPage,\n  withInfo,\n  selectPage,\n}) => {\n  const pagesArray: number[] = [];\n  let startPage = 1;\n\n  if (total - perPage >= page) {\n    startPage = page;\n  } else {\n    startPage = total - perPage + 1;\n  }\n\n  for (let i = startPage; i < startPage + perPage; i += 1) {\n    pagesArray.push(i);\n  }\n\n  return (\n    <>\n      {\n        withInfo\n        && (\n          <div\n            className=\"WithInfo\"\n          >\n            {`${startPage} - ${startPage + perPage - 1} of ${total}`}\n          </div>\n        )\n      }\n      {\n        pagesArray.map(visiblePage => (\n          <button\n            type=\"button\"\n            onClick={() => {\n              selectPage(visiblePage);\n            }}\n            className={\n              currentPage === visiblePage ? 'PageItem Selected' : 'PageItem'\n            }\n            key={visiblePage}\n          >\n            {visiblePage}\n          </button>\n        ))\n      }\n    </>\n  );\n};\n\n// The expression below was added because of linter\n// but it doesn't have any sense\nPagination.defaultProps = {\n  perPage: 5,\n  page: 1,\n};\n\nexport default Pagination;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Pagination2.scss';\n\ntype Props = {\n  first: number,\n  precurrent: number,\n  current: number,\n  postcurrent: number,\n  last: number,\n  isFirstVisible: boolean,\n  isPrecurrentVisible: boolean,\n  isPostcurrentVisible: boolean,\n  isPrecurrentFreeSpaceVisible: boolean,\n  isPostcurrentFreeSpaceVisible: boolean,\n  isLastVisible: boolean,\n  selectPage: (selectedPage: number) => void,\n  moveBack: () => void,\n  moveForth: () => void,\n};\n\nconst Pagination2: React.FC<Props> = ({\n  first,\n  precurrent,\n  current,\n  postcurrent,\n  last,\n  isFirstVisible,\n  isPrecurrentVisible,\n  isPostcurrentVisible,\n  isPrecurrentFreeSpaceVisible,\n  isPostcurrentFreeSpaceVisible,\n  isLastVisible,\n  selectPage,\n  moveBack,\n  moveForth,\n}) => {\n  return (\n    <nav className=\"PagesContainer\">\n      <NavLink\n        className=\"PageLink VersionTwoButton Back\"\n        to={`/page=${current - 1}`}\n        onClick={moveBack}\n        style={{\n          pointerEvents: (current === first) ? 'none' : 'auto',\n        }}\n      >\n        &lt;\n      </NavLink>\n      <ul\n        className=\"PagesPanel\"\n      >\n        <li\n          className=\"ItemPage\"\n          hidden={!isFirstVisible}\n        >\n          <NavLink\n            className=\"PageLink\"\n            to={`/page=${first}`}\n            onClick={() => {\n              selectPage(first);\n            }}\n          >\n            {first}\n          </NavLink>\n        </li>\n        <li\n          className=\"FreeSpace\"\n          hidden={!isPrecurrentFreeSpaceVisible}\n        >\n          ...\n        </li>\n        <li\n          className=\"ItemPage\"\n          hidden={!isPrecurrentVisible}\n        >\n          <NavLink\n            className=\"PageLink\"\n            to={`/page=${precurrent}`}\n            onClick={() => {\n              selectPage(precurrent);\n            }}\n          >\n            {precurrent}\n          </NavLink>\n        </li>\n        <li\n          className=\"ItemPage\"\n        >\n          <NavLink\n            className=\"PageLink\"\n            to={`/page=${current}`}\n            onClick={() => {\n              selectPage(current);\n            }}\n          >\n            {`[${current}]`}\n          </NavLink>\n        </li>\n        <li\n          className=\"ItemPage\"\n          hidden={!isPostcurrentVisible}\n        >\n          <NavLink\n            className=\"PageLink\"\n            to={`/page=${postcurrent}`}\n            onClick={() => {\n              selectPage(postcurrent);\n            }}\n          >\n            {postcurrent}\n          </NavLink>\n        </li>\n        <li\n          className=\"FreeSpace\"\n          hidden={!isPostcurrentFreeSpaceVisible}\n        >\n          ...\n        </li>\n        <li\n          className=\"ItemPage\"\n          hidden={!isLastVisible}\n        >\n          <NavLink\n            className=\"PageLink\"\n            to={`/page=${last}`}\n            onClick={() => {\n              selectPage(last);\n            }}\n          >\n            {last}\n          </NavLink>\n        </li>\n      </ul>\n      <NavLink\n        className=\"PageLink VersionTwoButton Forth\"\n        to={`/page=${current + 1}`}\n        onClick={moveForth}\n        style={{\n          pointerEvents: (current === last) ? 'none' : 'auto',\n        }}\n      >\n        &gt;\n      </NavLink>\n    </nav>\n  );\n};\n\nexport default Pagination2;\n","import React from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport './App.scss';\nimport PageContent from './components/PageContent/PageContent';\nimport Pagination from './components/Pagination/Pagination';\nimport Pagination2 from './components/Pagination2/Pagination2';\n\ninterface State {\n  total: number,\n  perPage: number,\n  page: number,\n  withInfo: boolean,\n  currentPage: number,\n  isVersionOneUsed: boolean,\n  current: number,\n  isFirstVisible: boolean,\n  isPrecurrentVisible: boolean,\n  isPostcurrentVisible: boolean,\n  isPrecurrentFreeSpaceVisible: boolean,\n  isPostcurrentFreeSpaceVisible: boolean,\n  isLastVisible: boolean,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    total: 42,\n    perPage: 5,\n    page: 1,\n    withInfo: true,\n    currentPage: 1,\n    isVersionOneUsed: false,\n    current: 1,\n    isFirstVisible: false,\n    isPrecurrentVisible: false,\n    isPostcurrentVisible: true,\n    isPrecurrentFreeSpaceVisible: false,\n    isPostcurrentFreeSpaceVisible: true,\n    isLastVisible: true,\n  };\n\n  changeVersion = () => {\n    this.setState((state) => ({\n      isVersionOneUsed: !state.isVersionOneUsed,\n    }));\n  };\n\n  onPageChange = (selectedPage: number) => {\n    this.setState({\n      currentPage: selectedPage,\n    });\n  };\n\n  handlePrevButtonClick = () => {\n    if (this.state.currentPage === this.state.page) {\n      this.setState((prevState) => {\n        return {\n          page: prevState.page - 1,\n        };\n      });\n    }\n\n    this.setState((prevState) => {\n      return {\n        currentPage: prevState.currentPage - 1,\n      };\n    });\n  };\n\n  handleNextButtonClick = () => {\n    if (this.state.currentPage\n      === this.state.page + this.state.perPage - 1) {\n      this.setState((prevState) => {\n        return {\n          page: prevState.page + 1,\n        };\n      });\n    }\n\n    this.setState((prevState) => {\n      return {\n        currentPage: prevState.currentPage + 1,\n      };\n    });\n  };\n\n  setStartPage = (selectedFrameSize: number) => {\n    let startPage: number;\n\n    if (this.state.currentPage - this.state.page > selectedFrameSize) {\n      startPage = this.state.currentPage - selectedFrameSize + 1;\n    } else {\n      startPage = this.state.page;\n    }\n\n    return startPage;\n  };\n\n  onPerPageChange = (event : React.ChangeEvent<HTMLSelectElement>) => {\n    this.setState({\n      page: this.setStartPage(parseInt(event.target.value, 10)),\n      perPage: +event.target.value,\n    });\n  };\n\n  setParemetersForValueOne = () => {\n    this.setState({\n      isFirstVisible: false,\n      isLastVisible: true,\n      isPrecurrentVisible: false,\n      isPrecurrentFreeSpaceVisible: false,\n      isPostcurrentVisible: true,\n      isPostcurrentFreeSpaceVisible: true,\n    });\n  };\n\n  setParametersForValueTwo = () => {\n    this.setState({\n      isFirstVisible: true,\n      isLastVisible: true,\n      isPrecurrentVisible: false,\n      isPrecurrentFreeSpaceVisible: false,\n      isPostcurrentVisible: true,\n      isPostcurrentFreeSpaceVisible: true,\n    });\n  };\n\n  setParametersForValueThree = () => {\n    this.setState({\n      isFirstVisible: true,\n      isLastVisible: true,\n      isPrecurrentVisible: true,\n      isPrecurrentFreeSpaceVisible: false,\n      isPostcurrentVisible: true,\n      isPostcurrentFreeSpaceVisible: true,\n    });\n  };\n\n  setParametersForLastValue = () => {\n    this.setState({\n      isFirstVisible: true,\n      isLastVisible: false,\n      isPrecurrentVisible: true,\n      isPrecurrentFreeSpaceVisible: true,\n      isPostcurrentVisible: false,\n      isPostcurrentFreeSpaceVisible: false,\n    });\n  };\n\n  setParametersForSecondValueFromEnd = () => {\n    this.setState({\n      isFirstVisible: true,\n      isLastVisible: false,\n      isPrecurrentVisible: true,\n      isPrecurrentFreeSpaceVisible: true,\n      isPostcurrentVisible: true,\n      isPostcurrentFreeSpaceVisible: false,\n    });\n  };\n\n  setParametersForThirdValueFromEnd = () => {\n    this.setState({\n      isFirstVisible: true,\n      isLastVisible: true,\n      isPrecurrentVisible: true,\n      isPrecurrentFreeSpaceVisible: true,\n      isPostcurrentVisible: true,\n      isPostcurrentFreeSpaceVisible: false,\n    });\n  };\n\n  setParametersForRegularValue = () => {\n    this.setState({\n      isFirstVisible: true,\n      isLastVisible: true,\n      isPrecurrentVisible: true,\n      isPrecurrentFreeSpaceVisible: true,\n      isPostcurrentVisible: true,\n      isPostcurrentFreeSpaceVisible: true,\n    });\n  };\n\n  onPageChangeVersionTwo\n  = (selectedPage: number) => {\n    this.setState({\n      current: selectedPage,\n    });\n\n    if (selectedPage === this.state.page) {\n      this.setParemetersForValueOne();\n\n      return;\n    }\n\n    if (selectedPage === this.state.page + 1) {\n      this.setParametersForValueTwo();\n\n      return;\n    }\n\n    if (selectedPage === this.state.page + 2) {\n      this.setParametersForValueThree();\n\n      return;\n    }\n\n    if (selectedPage === this.state.total) {\n      this.setParametersForLastValue();\n\n      return;\n    }\n\n    if (selectedPage === this.state.total - 1) {\n      this.setParametersForSecondValueFromEnd();\n\n      return;\n    }\n\n    if (selectedPage === this.state.total - 2) {\n      this.setParametersForThirdValueFromEnd();\n\n      return;\n    }\n\n    this.setParametersForRegularValue();\n  };\n\n  handleBackButtonClick = () => {\n    const prevPage = this.state.current;\n\n    this.setState(state => ({\n      current: state.current - 1,\n    }));\n\n    if (prevPage === this.state.page + 1) {\n      this.setParemetersForValueOne();\n\n      return;\n    }\n\n    if (prevPage === this.state.page + 2) {\n      this.setParametersForValueTwo();\n\n      return;\n    }\n\n    if (prevPage === this.state.page + 3) {\n      this.setParametersForValueThree();\n\n      return;\n    }\n\n    if (prevPage === this.state.total) {\n      this.setParametersForSecondValueFromEnd();\n\n      return;\n    }\n\n    if (prevPage === this.state.total - 1) {\n      this.setParametersForThirdValueFromEnd();\n\n      return;\n    }\n\n    this.setParametersForRegularValue();\n  };\n\n  handleForthButtonClick = () => {\n    const prevPage = this.state.current;\n\n    this.setState(state => ({\n      current: state.current + 1,\n    }));\n\n    if (prevPage === this.state.page) {\n      this.setParametersForValueTwo();\n\n      return;\n    }\n\n    if (prevPage === this.state.page + 1) {\n      this.setParametersForValueThree();\n\n      return;\n    }\n\n    if (prevPage === this.state.total - 3) {\n      this.setParametersForThirdValueFromEnd();\n\n      return;\n    }\n\n    if (prevPage === this.state.total - 2) {\n      this.setParametersForSecondValueFromEnd();\n\n      return;\n    }\n\n    if (prevPage === this.state.total - 1) {\n      this.setParametersForLastValue();\n\n      return;\n    }\n\n    this.setParametersForRegularValue();\n  };\n\n  render() {\n    return (\n      <>\n        <h1>\n          Pagination\n        </h1>\n\n        <select\n          className=\"ChangeVersion\"\n          defaultValue=\"VersionTwo\"\n          onChange={this.changeVersion}\n        >\n          <option\n            value=\"VersionOne\"\n          >\n            Version One\n          </option>\n          <option\n            value=\"VersionTwo\"\n          >\n            Version Two\n          </option>\n        </select>\n\n        <div\n          className=\"VersionOne\"\n          hidden={!this.state.isVersionOneUsed}\n        >\n          <select\n            className=\"ChangePerPage\"\n            defaultValue={5}\n            onChange={this.onPerPageChange}\n          >\n            <option\n              value=\"3\"\n            >\n              Pages to display 3\n            </option>\n            <option\n              value=\"5\"\n            >\n              Pages to display 5\n            </option>\n            <option\n              value=\"10\"\n            >\n              Pages to display 10\n            </option>\n            <option\n              value=\"20\"\n            >\n              Pages to display 20\n            </option>\n          </select>\n\n          <nav\n            className=\"PagesContainer\"\n          >\n            <button\n              type=\"button\"\n              className=\"PrevButton\"\n              disabled={\n                this.state.currentPage === 1\n              }\n              onClick={this.handlePrevButtonClick}\n            >\n              Prev\n            </button>\n\n            <Pagination\n              total={this.state.total}\n              perPage={this.state.perPage}\n              page={this.state.page}\n              currentPage={this.state.currentPage}\n              withInfo={this.state.withInfo}\n              selectPage={this.onPageChange}\n            />\n\n            <button\n              type=\"button\"\n              className=\"NextButton\"\n              disabled={\n                this.state.currentPage\n                === this.state.total\n              }\n              onClick={this.handleNextButtonClick}\n            >\n              Next\n            </button>\n          </nav>\n        </div>\n\n        <div\n          className=\"VersionTwo\"\n          hidden={this.state.isVersionOneUsed}\n        >\n          <Pagination2\n            first={this.state.page}\n            precurrent={this.state.current - 1}\n            current={this.state.current}\n            postcurrent={this.state.current + 1}\n            last={this.state.total}\n            isFirstVisible={this.state.isFirstVisible}\n            isPrecurrentFreeSpaceVisible={\n              this.state.isPrecurrentFreeSpaceVisible\n            }\n            isPrecurrentVisible={this.state.isPrecurrentVisible}\n            isPostcurrentVisible={this.state.isPostcurrentVisible}\n            isPostcurrentFreeSpaceVisible={\n              this.state.isPostcurrentFreeSpaceVisible\n            }\n            isLastVisible={this.state.isLastVisible}\n            selectPage={this.onPageChangeVersionTwo}\n            moveBack={this.handleBackButtonClick}\n            moveForth={this.handleForthButtonClick}\n          />\n\n          <Routes>\n            <Route index element={<PageContent />} />\n            <Route\n              path={`/page=${this.state.current}`}\n              element={\n                <PageContent />\n              }\n            />\n          </Routes>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}